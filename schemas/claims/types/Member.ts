/**
 * This file auto-generated by Fern from our API Definition.
 */

import { TpastreamApi } from "../../..";
import * as core from "../../../core";
import * as schemas from "../..";

export const Member: core.schemas.ObjectSchema<Member.Raw, TpastreamApi.claims.Member> = core.schemas.object({
  email: core.schemas.string().optional(),
  employer: core.schemas.lazyObject(() => schemas.claims.Employer),
  firstName: core.schemas.property("first_name", core.schemas.string().optional()),
  id: core.schemas.number(),
  lastName: core.schemas.property("last_name", core.schemas.string().optional()),
  systemKey: core.schemas.property("system_key", core.schemas.record(core.schemas.unknown(), core.schemas.string())),
});

export declare namespace Member {
  interface Raw {
    email?: string | null;
    employer: schemas.claims.Employer.Raw;
    first_name?: string | null;
    id: number;
    last_name?: string | null;
    system_key: Record<unknown, string>;
  }
}
