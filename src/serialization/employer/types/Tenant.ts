/**
 * This file auto-generated by Fern from our API Definition.
 */

import { TpaStreamApi } from "../../..";
import * as core from "../../../core";
import * as serializers from "../..";

export const Tenant: core.schemas.ObjectSchema<Tenant.Raw, TpaStreamApi.employer.Tenant> = core.schemas.object({
  alegeusKeyEnabled: core.schemas.property("alegeus_key_enabled", core.schemas.boolean().optional()),
  id: core.schemas.number().optional(),
  name: core.schemas.string(),
  tenantId: core.schemas.property("tenant_id", core.schemas.number()),
  vendorTenants: core.schemas.property(
    "vendor_tenants",
    core.schemas.lazyObject(() => serializers.employer.VendorTenant1)
  ),
});

export declare namespace Tenant {
  interface Raw {
    alegeus_key_enabled?: boolean | null;
    id?: number | null;
    name: string;
    tenant_id: number;
    vendor_tenants: serializers.employer.VendorTenant1.Raw;
  }
}
