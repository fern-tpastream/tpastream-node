/**
 * This file auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { Client as ClaimClient } from "./resources/claim/client/Client";
import { Client as EmployerClient } from "./resources/employer/client/Client";
import { Client as KeyClient } from "./resources/key/client/Client";
import { Client as MemberClient } from "./resources/member/client/Client";

export declare namespace TpaStreamApiClient {
  interface Options {
    environment?: environments.Environment | string;
    auth?: {
      credentials?: core.Supplier<core.BasicAuth>;
    };
  }
}

export class TpaStreamApiClient {
  constructor(private readonly options: TpaStreamApiClient.Options) {}

  #claim: ClaimClient | undefined;

  public get claim(): ClaimClient {
    return (this.#claim ??= new ClaimClient(this.options));
  }

  #employer: EmployerClient | undefined;

  public get employer(): EmployerClient {
    return (this.#employer ??= new EmployerClient(this.options));
  }

  #key: KeyClient | undefined;

  public get key(): KeyClient {
    return (this.#key ??= new KeyClient(this.options));
  }

  #member: MemberClient | undefined;

  public get member(): MemberClient {
    return (this.#member ??= new MemberClient(this.options));
  }
}
